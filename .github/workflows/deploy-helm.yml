name: Deploy Helm Chart

on:
  push:
    tags:
      - 'v*'
      - '*.*.*'
  workflow_call:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        type: string

permissions:
  contents: write
  packages: write

env:
  CHART_DIR: helm/kube-health-reporter

jobs:
  deploy-helm:
    name: Package and deploy Helm chart
    runs-on: ubuntu-latest
    needs: []
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive version
        id: ver
        run: |
          if [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "version=${{ inputs.version }}" >> "$GITHUB_OUTPUT"
          fi


      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Log in to GHCR (Helm OCI)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username "${{ github.actor }}" --password-stdin

      - name: Package Helm chart
        run: |
          mkdir -p dist
          helm package "$CHART_DIR" \
            --version "${{ steps.ver.outputs.version }}" \
            --app-version "${{ steps.ver.outputs.version }}" \
            --destination dist

      - name: Push Helm chart to GHCR (OCI)
        run: |
          helm push "dist/kube-health-reporter-${{ steps.ver.outputs.version }}.tgz" \
            oci://ghcr.io/${{ github.repository_owner }}

      - name: Create GitHub Release and upload Helm chart asset
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          files: |
            dist/kube-health-reporter-${{ steps.ver.outputs.version }}.tgz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
